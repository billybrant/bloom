CREATE DATABASE  IF NOT EXISTS `bloom` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `bloom`;
-- MySQL dump 10.13  Distrib 5.6.13, for Win32 (x86)
--
-- Host: rit-wamp-dev    Database: bloom
-- ------------------------------------------------------
-- Server version	5.6.17

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `field_revision_body`
--

DROP TABLE IF EXISTS `field_revision_body`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `field_revision_body` (
  `entity_type` varchar(128) NOT NULL DEFAULT '' COMMENT 'The entity type this data is attached to',
  `bundle` varchar(128) NOT NULL DEFAULT '' COMMENT 'The field instance bundle to which this row belongs, used when deleting a field instance',
  `deleted` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'A boolean indicating whether this data item has been deleted',
  `entity_id` int(10) unsigned NOT NULL COMMENT 'The entity id this data is attached to',
  `revision_id` int(10) unsigned NOT NULL COMMENT 'The entity revision id this data is attached to',
  `language` varchar(32) NOT NULL DEFAULT '' COMMENT 'The language for this data item.',
  `delta` int(10) unsigned NOT NULL COMMENT 'The sequence number for this data item, used for multi-value fields',
  `body_value` longtext,
  `body_summary` longtext,
  `body_format` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`entity_type`,`entity_id`,`revision_id`,`deleted`,`delta`,`language`),
  KEY `entity_type` (`entity_type`),
  KEY `bundle` (`bundle`),
  KEY `deleted` (`deleted`),
  KEY `entity_id` (`entity_id`),
  KEY `revision_id` (`revision_id`),
  KEY `language` (`language`),
  KEY `body_format` (`body_format`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Revision archive storage for field 2 (body)';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `field_revision_body`
--

LOCK TABLES `field_revision_body` WRITE;
/*!40000 ALTER TABLE `field_revision_body` DISABLE KEYS */;
INSERT INTO `field_revision_body` VALUES ('node','page',0,1,1,'und',0,'<h1>Overview</h1>\r\n\r\n<p>Bloom is a platform for developing and delivering web applications to conduct research at MEEI. &nbsp;The initial motivation was an ever growing awareness that researchers were struggling with their data. Collecting, maintaining, scrubbing, and extracting their data for loading into analytical tools was becoming increasingly challenging as: the originally adopted tools aged, security requirements became radically more stringent, and expectations among grantors and colleagues rose.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For the techies out there it\'s the drupal CMS with lots of configuration, module selection..., running on Windows Server 2008 R3, Apache 2.4, PHP 5.5, and MySQL 5.6.</p>\r\n','','full_html'),('node','page',0,1,2,'und',0,'<h1>Overview</h1>\r\n\r\n<p>Bloom is a platform for developing and delivering web applications to conduct research at MEEI. &nbsp;The initial motivation was an ever growing awareness that researchers were struggling with their data. Collecting, maintaining, scrubbing, and extracting their data for loading into analytical tools was becoming increasingly challenging as: the originally adopted tools aged, security requirements became radically more stringent, and expectations among grantors and colleagues rose. &nbsp;Extremely common is the need to migrate data from Excel, Paradox, FoxPro, and other applications that ultimately proved deficient to the task.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>For the techies out there it\'s the drupal CMS with lots of configuration, module selection..., running on Windows Server 2008 R3, Apache 2.4, PHP 5.5, and MySQL 5.6.</p>\r\n\r\n<!--break-->\r\n','','full_html'),('node','page',0,12,13,'und',0,'<p>The narratives are more philosophical in tone, describing things like architecture decisions.</p>\r\n','','full_html'),('node','page',0,13,14,'und',0,'<h1>When is a New Release Needed?</h1>\r\n\r\n<p>Bloom employs a software development methodology called \"Release Management\". &nbsp;Fundamentally release management is a process where changes to software are performed on a development instance (aka dev) of the application, tested, and then once all is well those changes are \"promoted\" to the production instance through the use of version control software (Bloom uses git).</p>\r\n\r\n<p>This begs the question \"What use of Bloom cause changes that need to be made to the development instance and promoted?\" &nbsp;Following are examples of things you do with a Bloom site that do <strong>not </strong>require a new release:</p>\r\n\r\n<ul>\r\n	<li>Adding new content</li>\r\n	<li>Editing existing content</li>\r\n	<li>Adding users</li>\r\n	<li>Importing data</li>\r\n	<li>Exporting data</li>\r\n</ul>\r\n\r\n<p>The following are changes that should be done first to dev and then released:</p>\r\n\r\n<ul>\r\n	<li>Changes to themes</li>\r\n	<li>Creation and modification of content types</li>\r\n	<li>Addition of Drupal modules</li>\r\n	<li>Drupal upgrades</li>\r\n	<li>Adding or Modifying Roles</li>\r\n</ul>\r\n','','full_html'),('node','page',0,14,15,'und',0,'<p>Administration tasks broken into discreet steps.</p>\r\n','','full_html'),('node','page',0,15,16,'und',0,'<h1>How do I create and push a new release of my Bloom site?</h1>\r\n\r\n<ol>\r\n	<li>Make sure repository is up to date.\r\n	<ol>\r\n		<li>Change directory to where your repository is located.</li>\r\n		<li>At command prompt: \"git add --all .\"</li>\r\n		<li>Optionally: \"git status\" to see what your commit will do.</li>\r\n		<li>git commit -m \"the message describing what you are doing or what was added\"\"</li>\r\n	</ol>\r\n	</li>\r\n	<li>Use your web browser to visit your dev instance (e.g. https://MySite-dev.meei.harvard.edu)</li>\r\n	<li>Make whatever changes you want. &nbsp;Remember you don\'t need to be very careful for two reasons: first it\'s not your production site which is merrily spinning along unaffected as you work in development, and second your entire site is backed up and maintained via version control, so if you break it we can always revert to the last version.</li>\r\n	<li>Test everything to ensure that not only your new changes are doing what you want them to do, but all the original functionality is still working properly.</li>\r\n	<li>Once you\'re sure it\'s all as you want visit the <a href=\"http://bloom.meei.harvard.edu\">Bloom Service Request Form</a>.</li>\r\n	<li>Then we:\r\n	<ol>\r\n		<li>Logon to the machine that hosts your Bloom production instance</li>\r\n		<li>Launch a command prompt</li>\r\n		<li>cd to the directory that holds all your Bloom site content (e.g. e:\\UserSites\\MySite)</li>\r\n		<li>Run the command: E:\\UserSites\\MySite&gt; git pull</li>\r\n	</ol>\r\n	</li>\r\n	<li>Just that easy</li>\r\n</ol>\r\n','','full_html'),('node','page',0,17,18,'und',0,'<div>\r\n<h2>Deploy a Minor Upgrade to Drupal</h2>\r\n</div>\r\n\r\n<div>\r\n<ol>\r\n	<li>​Download the latest&nbsp;<a href=\"https://drupal.org/project/drupal\" style=\"color: rgb(177, 0, 105); text-decoration: none;\">Drupal​</a>&nbsp;into e:\\UserSites, unzip. &nbsp;Unzipping left me with a drupal inside a drupal, so you may need to do some renaming and moving to get the drupal.7.xx that actually contains stuff into e:\\UserSites</li>\r\n	<li>Follow the intsructions in e:\\UserSites\\drupal.7-xx.\\UPGRADE.txt for 7.26 - 7.27 the following steps were executed:\r\n	<ol>\r\n		<li><a href=\"https://bloom-dev.meei.harvard.edu/?q=node#overlay=?q%3Dadmin/config/development/maintenance\" style=\"color: rgb(177, 0, 105); text-decoration: none;\">​Put site in maintenance mode</a></li>\r\n		<li><span style=\"line-height:1.6\">Except: \\sites, \\.git, and .gitignore, delete everything in e:\\UserSites\\bloom</span></li>\r\n		<li>E:\\UserSites&gt;cp -R drupal-7.27/* drupal-7.27/.htaccess bloom</li>\r\n		<li>Then you have to merge the database connection details from the old e:\\usersites\\bloom\\sites\\default\\setting.php into the new&nbsp;e:\\usersites\\\\sites\\default\\default-setting.php and overwrite the old&nbsp;e:\\usersites\\bloom\\sites\\default\\setting.php</li>\r\n		<li>Run the update script&nbsp;\r\n		<ol>\r\n			<li>Browse to https://bloom-dev.meei.harvard.edu/update.php</li>\r\n			<li>ok, ok, ok Except that I filled in the database connection details from the new&nbsp;e:\\usersites\\bloom\\sites\\default\\setting.php and the install script moved me over to the upgrade version</li>\r\n			<li>I went to Reports-&gt;Available Updates and ran it a couple more times to get everything all in sync</li>\r\n		</ol>\r\n		</li>\r\n		<li>Commit a version control update\r\n		<ol>\r\n			<li>​cd e:\\UserSites\\Bloom</li>\r\n			<li>git add --all .</li>\r\n		</ol>\r\n		</li>\r\n	</ol>\r\n	</li>\r\n</ol>\r\n</div>\r\n\r\n<p>​​</p>\r\n','','filtered_html'),('node','page',0,18,19,'und',0,'<div>\r\n<h2>Save a New snapshot of an entir​e user-site in version control</h2>\r\n</div>\r\n\r\n<div>\r\n<ol>\r\n	<li>Launch MySQL Workbench\r\n	<ol>\r\n		<li>Click \"Data Export\"</li>\r\n		<li>Check the user-site\'s database</li>\r\n		<li>\"Start Export\" button - bottom right</li>\r\n	</ol>\r\n	</li>\r\n	<li>Get a command window and set your working directory&nbsp;to e:/UserSites/user-site\r\n	<ol>\r\n		<li>E:/UserSites/bloom&gt; git add --all&nbsp;.</li>\r\n		<li>E:/UserSites/bloom&gt; git commit -m \"Description of the current state of what you\'re saving, [database backup name from above]\"</li>\r\n	</ol>\r\n	</li>\r\n</ol>\r\n\r\n<div>\r\n<h2>&nbsp;</h2>\r\n</div>\r\n</div>\r\n','','filtered_html'),('node','page',0,19,20,'und',0,'<p>The menu on the left offers documention on configuring&nbsp;and administering&nbsp;Bloom. &nbsp;A few of them go into architectural design decisions which I hope explains&nbsp;why&nbsp;the particular steps were chosen, and thus how they might be altered to fit your specific needs.</p>\r\n\r\n<p>Much of the documentation is in recipe form, that is it steps you through the sequence of things you click to accomplish the documented task. &nbsp;In those recipes I <u>underline</u> the words that you\'ll see on the screen, to help you find your way, as you go through the steps.</p>\r\n','','full_html'),('node','page',0,20,21,'und',0,'<div>\r\n<h1>Creating a bloom development user site</h1>\r\n</div>\r\n\r\n<div>\r\n<ol>\r\n	<li>​Create the database with MySQL Workbench\r\n	<ol>\r\n		<li>From the \"Database\" menu select \"Migration Wizard...\"</li>\r\n		<li>Accept defaults until you get to the \"Schema Selection\" screen, and check only \"bloom-dev\"</li>\r\n		<li>Defaults again until \"Manual Editing\",&nbsp;\r\n		<ol>\r\n			<li>select \"All Objects\" from the drop down on the right</li>\r\n			<li>target objects column edit the database name changing it to your user-site\'s name</li>\r\n			<li>note: the last screen \"Bulk Data Transfer\" takes about 5 minutes to complete</li>\r\n		</ol>\r\n		</li>\r\n		<li>create the mysql user that drupal will use for access\r\n		<ol>\r\n			<li>\"Users and Privileges\" menu on left</li>\r\n			<li>\"Add Account\" button</li>\r\n			<li>Login tab - you set \"Login Name:\" and the password</li>\r\n			<li>\"Schema Privileges\" tab&nbsp;\r\n			<ol>\r\n				<li>\"Add Entry\" button on right\r\n				<ol>\r\n					<li>\"Selected Schema\" radio button</li>\r\n					<li>highlight the user-site schema - ok</li>\r\n					<li>\'Select \"All\"\' button, check \"GRANT OPTION\"&nbsp;</li>\r\n					<li>Apply (I do Refresh too)</li>\r\n				</ol>\r\n				</li>\r\n			</ol>\r\n			</li>\r\n		</ol>\r\n		</li>\r\n	</ol>\r\n	</li>\r\n	<li>Create a&nbsp;CNAME or whatever, on rit-wamp-dev I edit the c:/windows/system32/drivers/etc/hosts</li>\r\n	<li>Add an apache vhost by editing e:\\apache24\\conf\\extra\\httpd-vhosts.conf. &nbsp;Just mimic what\'s there.</li>\r\n	<li>open a command prompt and&nbsp;cd to e:\\UserSites</li>\r\n	<li>\"E:\\UserSites\\&gt; git clone file:///e:/UserSites/bloom\\User-site you set .\\User-site to the new one</li>\r\n	<li>Edit e:/usersites/user-site/sites/default/settings.php. &nbsp;Search for \"bloom\"; you only need to change&nbsp;those MySQL parameters.</li>\r\n	<li>Drupal tweaks\r\n	<ol>\r\n		<li>browse to http://user-site-dev.meei.harvard.edu</li>\r\n		<li>login as admin (ask Billy if we haven\'t figured out how to securely store these)</li>\r\n		<li>click on the configuration menu.&nbsp;Top right \"Site Information\" - change the \"Site Name\" to user-site.meei.harvard.edu</li>\r\n		<li>Report main menu -&gt; Status Report -&gt; click the requested stuff (update checks and the like)</li>\r\n	</ol>\r\n	</li>\r\n</ol>\r\n\r\n<div>\r\n<h2>&nbsp;</h2>\r\n</div>\r\n</div>\r\n','','full_html'),('node','page',0,23,24,'und',0,'<h1>Building a Bloom System from Scratch</h1>\r\n\r\n<ol>\r\n	<li>Follow the <a href=\"https://www.drupal.org/documentation/install/beginners\">Drupal installation instructions</a> best suited to your environment; Bloom is platform independent.</li>\r\n	<li>Now you replace Drupal\'s delivered (default) web content with Bloom. &nbsp;(Bloom is composed of that directory tree of source files, and a MySQL database.)\r\n	<ol>\r\n		<li>First delete the entire Drupal web content tree. &nbsp;The way to identify that directory is by examining your web server configuration; it wlil be the root directory for your Drupal site.</li>\r\n		<li>Use git to clone&nbsp;bloom such that the names of the new Bloom content tree are similar to the name of the one you just deleted.</li>\r\n	</ol>\r\n	</li>\r\n	<li>Fire it all up, and visit http://<em>example.com</em>/update.php</li>\r\n	<li>From here, you\'ve got two options:\r\n	<ol>\r\n		<li>Have at it. &nbsp;Get some folks with Drupal skills, use the Bloom documentation (it\'s deficient, by growing), and build your site. &nbsp;Worthy of consideration, there\'s an army of Drupal consultants who can help here.</li>\r\n		<li>Contact me: William (Billy) Goedicke, billy@brant-interactive.com and we can see if I can help. &nbsp;I do have the leg up that I developed Bloom.</li>\r\n	</ol>\r\n	</li>\r\n</ol>\r\n\r\n<p>Below is a diary of an early installation I did. &nbsp;Details are increasingly outdated, but there are some general practices embedded in there that you might find useful.</p>\r\n\r\n<ul>\r\n	<li>Create a dedicated disk. &nbsp;Here it\'s called e:</li>\r\n	<li>Unzip&nbsp;<a href=\"http://www.apachelounge.com/download/VC11/binaries/httpd-2.4.9-win64-VC11.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">httpd-2.4.9-win64-VC11.zip</a>&nbsp;and copy the folder Apache24 to e:\\</li>\r\n	<li>Create git repository\r\n	<ol>\r\n		<li>​cd e:\\Apache24</li>\r\n		<li>git init</li>\r\n		<li>git add --all *</li>\r\n		<li>git commit -m \"Initial load of unzipped and unmodified httpd-2.4.9-win64-VC11.zip\"</li>\r\n	</ol>\r\n	</li>\r\n	<li>Unzip&nbsp;<a href=\"http://windows.php.net/downloads/releases/php-5.5.11-nts-Win32-VC11-x64.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">php-5.5.11-Win32-VC11-x64.zip​</a>&nbsp;and renaame the folder to \"php\" then copy to e: resulting in e:\\php</li>\r\n	<li>I use&nbsp;<a href=\"https://sourceforge.net/projects/passwordsafe/files/passwordsafe/3.33/pwsafe-3.33.exe/download\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Password Safe</a>&nbsp;to create and maintain passwords. &nbsp;It generates obscure, randow passwords and securely stores them.</li>\r\n	<li>Create git repository\r\n	<ol>\r\n		<li>​cd e:\\php</li>\r\n		<li>git init</li>\r\n		<li>git add --all *</li>\r\n		<li>git commit -m \"Initial load of unzipped and unmodified httpd-2.4.9-win64-VC11.zip​\"</li>\r\n	</ol>\r\n	</li>\r\n	<li>Run&nbsp;<a href=\"http://dev.mysql.com/downloads/file.php?id=451576\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">mysql-installer-web-community-5.6.17.0.msi​</a>\r\n	<ol>\r\n		<li>​Couple OK-OKs</li>\r\n		<li>Set \"Installation Path:\" to \"e:\\MySQL\\\"</li>\r\n		<li>Set \"Data Path:\" to \"e:\\MySQL\\MySQL Server 5.6\\\"</li>\r\n		<li>A bunch more OK, Next&gt;, and the like</li>\r\n		<li>Set dbms root password. &nbsp;</li>\r\n		<li>Add users\r\n		<ol>\r\n			<li>username=bloom-dev, host=localhost</li>\r\n			<li>username=bloom-test, host=localhost</li>\r\n		</ol>\r\n		</li>\r\n		<li>Windows Service Name=BloomDevTest_MySQL</li>\r\n	</ol>\r\n	</li>\r\n	<li>MySQL Workbench opens\r\n	<ol>\r\n		<li>​Create schema bloom-dev</li>\r\n		<li>Create schema bloom-test</li>\r\n		<li>Users and Privileges from left menu</li>\r\n		<li>Configure security for bloom-dev\r\n		<ol>\r\n			<li>Select user&nbsp;bloom-dev</li>\r\n			<li>schema privileges tab</li>\r\n			<li>select specific schema&nbsp;radio button&nbsp;</li>\r\n			<li>select schema&nbsp;bloom-dev</li>\r\n			<li>select all privileges (I even add \"grant option\")</li>\r\n		</ol>\r\n		</li>\r\n		<li>Repeat for bloom-test</li>\r\n		<li>git stuff like above - git commit -m \"Initial load of result of running mysql-installer-web-community-5.6.17.0.msi\"</li>\r\n	</ol>\r\n	</li>\r\n	<li>Apache e:/Apache24/conf/httpd.conf&nbsp;Edits (following are lines that changed&nbsp;after editing)\r\n	<ul>\r\n		<li>LoadModule php5_module \"e:/php/php5apache2_4.dll\"</li>\r\n		<li>AddHandler application/x-httpd-php .php</li>\r\n		<li># configure the path to php.ini</li>\r\n		<li>PHPIniDir \"e:/php\"</li>\r\n		<li>ServerRoot \"e:/Apache24\"</li>\r\n		<li>DocumentRoot \"e:/Apache24/htdocs\"</li>\r\n		<li>&lt;Directory \"e:/Apache24/htdocs\"&gt;​</li>\r\n		<li>LoadModule vhost_alias_module modules/mod_vhost_alias.so</li>\r\n		<li>Include conf/extra/httpd-vhosts.conf</li>\r\n		<li>&nbsp; &nbsp; DirectoryIndex index.html index.php</li>\r\n	</ul>\r\n	</li>\r\n	<li>Apache e:/Apache32/conf/extras/httpd-vhosts.conf\r\n	<ul>\r\n		<li>&lt;VirtualHost *:80&gt;</li>\r\n		<li>&nbsp; &nbsp; DocumentRoot e:/UserSites/bloom</li>\r\n		<li>&nbsp; &nbsp; ServerName bloom-dev.meei.harvard.edu</li>\r\n		<li>&nbsp; &nbsp; &lt;location /&gt;</li>\r\n		<li>&nbsp; &nbsp; &nbsp; &nbsp;Require all granted</li>\r\n		<li>&nbsp; &nbsp; &lt;/location&gt;</li>\r\n		<li>&lt;/VirtualHost&gt;</li>\r\n	</ul>\r\n	</li>\r\n	<li>e:/php/php.ini\r\n	<ul>\r\n		<li>extension=php_gd2.dll</li>\r\n		<li>extension=php_pdo_mysql.dll​</li>\r\n		<li>extension_dir = \"e:/php/ext\"</li>\r\n		<li>extension=php_mbstring.dll</li>\r\n	</ul>\r\n	</li>\r\n	<li>Extend Drupal functionality with modules we need. &nbsp;There\'s a lot of pointing and clicking for each module. &nbsp;I\'ll detail the first module installation, then just give the name of the subsequent modules. &nbsp;They\'re all installed by the same sequence of steps described in the first one.\r\n	<ol>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/ctools-7.x-1.4.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Chaos Tools</a>\r\n		<ol>\r\n			<li>Browse to http://eyegene.meei.harvard.edu and login</li>\r\n			<li>Select \"Modules\" from the top tab bar</li>\r\n			<li>Click \"Install New Module\"&nbsp;(I right-click and open this in a new tab so I can switch back and forth)</li>\r\n			<li>Click the \"modules\" link in the sentence \"You can find modules...\"&nbsp;</li>\r\n			<li>Use search to find your module, you may have to scroll down the returned list; click on your module name</li>\r\n			<li>Scroll down to the listing of \"recommended release\"&nbsp;archive files and right click to copy the link to the zip for version 7.x...</li>\r\n			<li>Browse back to the Modules installation&nbsp;page on your local server</li>\r\n			<li>Paste the link to the zipfile into \"Installation URL\" and click the \"Install\" button</li>\r\n			<li>After install finishes click on \"Enable Installed Modules\"</li>\r\n			<li>Scroll down list of modules to your newly installed one, and check the \"Enable\" box on the left</li>\r\n			<li>Click \"Save Configuration\" button at the bottom and move on to the next module.</li>\r\n		</ol>\r\n		</li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/entity-7.x-1.4.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Entity API</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/workflow-7.x-2.2.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Workflow​</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/rules-7.x-2.6.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Rules</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/field_validation-7.x-2.3.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Field Validation</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/addressfield-7.x-1.0-beta5.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Addressfield</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/sliderfield-7.x-2.0-alpha4.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Sliderfield</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/date-7.x-2.7.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Date</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/addressfield_phone-7.x-1.1.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Addressfield Phone</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/email-7.x-1.2.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Email Field</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/field_group-7.x-1.3.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Fieldgroup</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/views-7.x-3.7.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Views</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/views_data_export-7.x-3.0-beta7.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Views Data Export</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/auto_nodetitle-7.x-1.0.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Automatic Nodetitles​</a></li>\r\n		<li><a href=\"http://ftp.drupal.org/files/projects/og-7.x-2.6.zip\" style=\"text-decoration: none; color: rgb(177, 0, 105);\">Organic Groups</a></li>\r\n		<li>​Universal Unique ID</li>\r\n		<li>Feeds</li>\r\n		<li>Node Export</li>\r\n		<li>Job Scheduler</li>\r\n	</ol>\r\n	</li>\r\n</ul>\r\n\r\n<div>\r\n<h1>&nbsp;</h1>\r\n</div>\r\n','','full_html'),('node','page',0,24,25,'und',0,'<p>These are step by step recipes for people who are using Bloom to conduct medical research.</p>\r\n','','full_html'),('node','page',0,25,26,'und',0,'<p>Fill in the \"Bloom Service Request\" form just under the Eye &amp; Ear log at the top of this screen.</p>\r\n','','full_html'),('node','page',0,28,29,'und',0,'<h1>Bloom\'s HIPAA Accomodations</h1>\r\n\r\n<h2>The HIPAA_PII Content Type</h2>\r\n\r\n<p>A special content type, think a database table, or a spreadsheet, is integrated into each Bloom site. &nbsp;HIPAA_PII consolidates the attributes which can identify a person. &nbsp;This allows their access to be tightly controlled.</p>\r\n\r\n<h2>The HIPAAmaster Role</h2>\r\n\r\n<p>HIPAAmaster is the only Role that can access HIPAA_PII content. &nbsp;</p>\r\n\r\n<h2>The BloomRoler Role</h2>\r\n\r\n<p>BloomRoler is the only Role that can alter or assign roles</p>\r\n\r\n<h2>&nbsp;</h2>\r\n','','full_html'),('node','page',0,30,31,'und',0,'<p>This is just a link farm to external web resources</p>\r\n\r\n<ul>\r\n	<li><a href=\"http://www.hhs.gov/ocr/privacy/hipaa/understanding/coveredentities/De-identification/guidance.html\">HHS Guidance Regarding Methods for De-identification of Protected Health Information in Accordance with the Health Insurance Portability and Accountability Act (HIPAA) Privacy Rule</a></li>\r\n	<li><a href=\"http://www.gpo.gov/fdsys/pkg/CFR-2013-title45-vol1/xml/CFR-2013-title45-vol1-sec164-312.xml\">Title 45 - Public Welfare. SUBTITLE A - DEPARTMENT OF HEALTH AND HUMAN SERVICES. SUBCHAPTER C - ADMINISTRATIVE DATA STANDARDS AND RELATED REQUIREMENTS. PART 164 - SECURITY AND PRIVACY. Subpart C - Security Standards for the Protection of Electronic Protected Health Information.</a></li>\r\n</ul>\r\n','','full_html'),('node','page',0,33,34,'und',0,'<p>Bloom protects HIPAA PII via&nbsp;system customizations that go from documentation guiding&nbsp;best-practices on user processes, to code extensions to Drupal\'s&nbsp;core entity access architecture.</p>\r\n','','full_html'),('node','page',0,41,42,'und',0,'<h1>What is Bloom</h1>\r\n\r\n<p>Bloom is a web development platform&nbsp;which has been customized to meet the needs of clinical researchers.</p>\r\n\r\n<h1>What are the Features Bloom Provides</h1>\r\n\r\n<ul>\r\n	<li>HIPAA PII protections</li>\r\n	<li>Existing taxonomies of values like ICD-9 diagnoses are built-in</li>\r\n	<li>Easy to use interface for developing data sets (tables)</li>\r\n	<li>Automatic form creation for data entry</li>\r\n	<li>Extensive <a href=\"http://node/97\">documentation</a> (hundreds of books, on-line chat rooms...)</li>\r\n	<li>15,000+ freely available modules of software to extend the functionality</li>\r\n	<li>Supports many to many relationships (RDBMS-like)</li>\r\n</ul>\r\n\r\n<h1>How is PII Protected?</h1>\r\n\r\n<ul>\r\n	<li>The 18 commonly listed&nbsp;PII fields and associated restrictions are delivered in Bloom</li>\r\n	<li>PII data is only accessible via special&nbsp;role membership</li>\r\n	<li>Assignment of PII-accessing&nbsp;role is limited to a separate role</li>\r\n</ul>\r\n\r\n<h1>The Importance of Cardinality</h1>\r\n\r\n<ul>\r\n	<li>By Example a Survey is 1:1. &nbsp;That is 1 person gives 1 answer to each question. &nbsp;One last name, one heart rate...</li>\r\n	<li>In contrast one patient may see many doctors and one doctor can see many patients</li>\r\n	<li>The relationship between doctors and patients is many:many</li>\r\n	<li>A core need is: patient -&gt; symptom -&gt; diagnosis -&gt; treatment -&gt; outcome</li>\r\n</ul>\r\n\r\n<h1>Product Comparison Chart</h1>\r\n\r\n<table align=\"center\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:80%\">\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"row\">Feature</th>\r\n			<th scope=\"col\">REDCap</th>\r\n			<th scope=\"col\">HIPAA Compliant Survey Monkey&nbsp;</th>\r\n			<th scope=\"col\">Survey Gizmo</th>\r\n			<th scope=\"col\">Bloom</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"row\">Documentation (Books, Forums, IRC, FAQ)</th>\r\n			<td class=\"rtecenter\">0, No, No, Yes</td>\r\n			<td class=\"rtecenter\">3,Yes, No, Yes</td>\r\n			<td class=\"rtecenter\">0,Yes, No, Yes</td>\r\n			<td class=\"rtecenter\">300+, Yes, Yes, Yes</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">&nbsp;</th>\r\n			<td class=\"rtecenter\">&nbsp;</td>\r\n			<td class=\"rtecenter\">&nbsp;</td>\r\n			<td class=\"rtecenter\">&nbsp;</td>\r\n			<td class=\"rtecenter\">&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Richness of Functionality</th>\r\n			<td class=\"rtecenter\">Survey Only</td>\r\n			<td class=\"rtecenter\">Survey Only</td>\r\n			<td class=\"rtecenter\">Survey Only</td>\r\n			<td class=\"rtecenter\">Vast</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Security</th>\r\n			<td class=\"rtecenter\">Poor</td>\r\n			<td class=\"rtecenter\">Good</td>\r\n			<td class=\"rtecenter\">?</td>\r\n			<td class=\"rtecenter\">Implementor Dependent</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">HITECH Compliant</th>\r\n			<td class=\"rtecenter\">Internally Hosted</td>\r\n			<td class=\"rtecenter\">Yes</td>\r\n			<td class=\"rtecenter\">Unclear</td>\r\n			<td class=\"rtecenter\">Internally Hosted</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Application Maintainability</th>\r\n			<td class=\"rtecenter\">Poor</td>\r\n			<td class=\"rtecenter\">SAAS</td>\r\n			<td class=\"rtecenter\">SAAS</td>\r\n			<td class=\"rtecenter\">Release Managed</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Many:Many Cardinality</th>\r\n			<td class=\"rtecenter\">No</td>\r\n			<td class=\"rtecenter\">No</td>\r\n			<td class=\"rtecenter\">No</td>\r\n			<td class=\"rtecenter\">Yes</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">License</th>\r\n			<td class=\"rtecenter\">Proprietary</td>\r\n			<td class=\"rtecenter\">Commercial</td>\r\n			<td class=\"rtecenter\">Commercial</td>\r\n			<td class=\"rtecenter\">LGPL</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Price / &nbsp;Month (100 Users)</th>\r\n			<td class=\"rtecenter\">Free</td>\r\n			<td class=\"rtecenter\">$65</td>\r\n			<td class=\"rtecenter\">$800</td>\r\n			<td class=\"rtecenter\">Free</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h1>Security</h1>\r\n\r\n<p>The devil is in the details, and I\'ll get into those, but there are also systemic issues that need consideration. &nbsp;Security is ultimately a function of user behaviors. &nbsp;If users share account credentials then any, no matter how robust, authorization mechanisms are useless. &nbsp;If systems administrators miss sensitive servers&nbsp;when applying critical patches, then intrusions are trivially executed. &nbsp;The most challenging component of these operational exposures is that people act rationally, they take the easiest path, they procrastinate when faced&nbsp;with tedium, awkwardness, or seemingly undue complexity. &nbsp;A close second to the problem of rational behavior is that we make mistakes.</p>\r\n\r\n<p>How does one minimze these operational exposures? &nbsp;The key is to play to workers\' rational aversion to work, to provide secure procedures which are the easiest to complete; making secure outcomes the easiest to achieve.</p>\r\n\r\n<p>The most potent tool is automation, that is the removal of humans from security management processes. &nbsp;The core&nbsp;</p>\r\n\r\n<p>Bloom employs a system maintenance methodology called \"Release Management\". &nbsp;It\'s simple to describe, but provides subtle, yet profound benefits. &nbsp;Release management is a process principle where all manual changes to the&nbsp;system are made to a \"development instance\", and when complete and tested are replicated via an automated process to the \"production instance\". &nbsp;The production instance is <u><strong>never</strong></u>&nbsp;manually modified. &nbsp;For a variety of reasons (e.g. version control software is used to accomplish the automation, programmer types do this migration work) release management is mistakenly seen as primarily benefiting the software development process, and it does in dramatically reducing bugs in production systems. &nbsp;But, it\'s in the security realm that the greatest benefits arise. &nbsp;Consider a couple examples. &nbsp;A patch to a serious security hole is released; it\'s applied to development, tested, and then deployed to production systems, to all the production systems, identically, and quickly.</p>\r\n\r\n<h1>Optional&nbsp;yet&nbsp;Attainable Future Features</h1>\r\n\r\n<table align=\"center\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px\">\r\n	<thead>\r\n		<tr>\r\n			<th scope=\"row\">Description</th>\r\n			<th scope=\"col\">Effort Estimate</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<th scope=\"row\">Incorporation of <a href=\"http://ctakes.apache.org/\">cTakes</a> to parse clinical notes into analyzable fields</th>\r\n			<td class=\"rtecenter\">\r\n			<p>2 consultant / months</p>\r\n\r\n			<p>($200/hr &nbsp;= $70k)</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">inCommon Federated Identity Integration to allow remote collaboration</th>\r\n			<td class=\"rtecenter\">\r\n			<p>3&nbsp;person / months</p>\r\n\r\n			<p>(existing Harvard&nbsp;staff ≈&nbsp;$120k/yr = $30k)</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Integrated Google Analytics of Clinical Data</th>\r\n			<td>\r\n			<p class=\"rtecenter\">2 consultant / months</p>\r\n\r\n			<p class=\"rtecenter\">($75/hr =&nbsp;$25.8k</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Intergrated OLAP Analytical Tool for Analytics of Clinical Data</th>\r\n			<td>\r\n			<p class=\"rtecenter\">4 Consultant - Months</p>\r\n\r\n			<p class=\"rtecenter\">($250/hr = $172k</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Translations</th>\r\n			<td>\r\n			<p class=\"rtecenter\">2&nbsp;person / months</p>\r\n\r\n			<p class=\"rtecenter\">(existing staff&nbsp;≈ $75/year = $12.5k)</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\"><a href=\"http://en.wikipedia.org/wiki/Dimension_(data_warehouse)#Conformed_dimension\">Conformed Dimensions</a> to Facilitate Inter-Clinic Collaboration</th>\r\n			<td class=\"rtecenter\">\r\n			<p>4&nbsp;person/months</p>\r\n\r\n			<p>(existing staff&nbsp;≈ $75k = $25k)</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Responsive Support for All of MEEI (this cost is ongoing)</th>\r\n			<td class=\"rtecenter\">\r\n			<p>1/3 System Administration FTE&nbsp;≈ $40k<br />\r\n			+ 2 @ User Support FTE&nbsp;≈ $50k = $100k/yr.</p>\r\n\r\n			<p>Total $140k/yr</p>\r\n\r\n			<p>&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<th scope=\"row\">Comprehensive Implementation Workflow</th>\r\n			<td class=\"rtecenter\">&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n','','full_html'),('node','page',0,42,43,'und',0,'<h2>Overview of this Document</h2>\r\n\r\n<p>The development of a user-friendly, feature rich, blending of different of elements on input forms in Bloom is challenging. &nbsp;Elements have: distinct meta-data, complex interdepencies, and interrelated modules each with myriad settings.</p>\r\n\r\n<p>Here we provide recipes for a set of element relations, commonly required to deploy bits of functionality (e.g. selecting nodes from a selection list in a form).</p>\r\n\r\n<h2>Providing a tree taxonomy checkbox widget in the \"node/add\" of a content type&nbsp;(requires term reference module</h2>\r\n\r\n<ol>\r\n	<li>Create the taxonomy</li>\r\n	<li>Create the content type\r\n	<ol>\r\n		<li>add a field</li>\r\n		<li>type \"term reference\"</li>\r\n		<li>widget \"term reference tree\"</li>\r\n		<li>check Start Minimized</li>\r\n		<li>(scroll to bottom)</li>\r\n		<li>Number of values - Unlimited, or single option</li>\r\n		<li>Vocabulary -&nbsp;<em>your-vocabulary</em></li>\r\n		<li>Save</li>\r\n		<li>Manage Display (tab way at top)</li>\r\n		<li>Term Reference format is link</li>\r\n	</ol>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n','','full_html'),('node','page',0,43,44,'und',0,'<h1>Overview</h1>\r\n\r\n<p>Bloom is designed to collect, manage, and export data gathered in the course of delivering medical services in a clinical environment. &nbsp;This document is designed to describe the steps you take to setup Bloom to manage your data. &nbsp;What follows is a description of the sequence of steps you\'ll perform to get your data into Bloom, update/edit the data, and finally extract the data for analysis, and other reporting needs. &nbsp;Drupal documentation is liberally referenced, via links.</p>\r\n\r\n<h1>Setup Your Usernames&nbsp;(this part\'s easy)</h1>\r\n\r\n<p>Bloom comes with two users admin and bloomer.&nbsp; Each account\'s password is Bloom_Rocks. &nbsp;The admin user has completely unrestricted access to everything. &nbsp;The bloomer username is intended for use by an administrative support person, they can add records, edit/update records, generate export files... &nbsp;Bloomer can not access data that is protected by HIPAA. &nbsp;</p>\r\n\r\n<p>Change the password for admin</p>\r\n\r\n<ol>\r\n	<li>At the bottom left of the screen login to the admin account.</li>\r\n	<li>Choose \"<a href=\"https://www.drupal.org/node/627158\" target=\"_blank\">People</a>\" from the admin menu at the top of your screen (white letters on a black background).</li>\r\n	<li>Click on \"admin\" in the table at the bottom of the screen</li>\r\n	<li>Select the tab labelled \"edit\"</li>\r\n	<li>Change the password, and \"save\" at the bottom (\"save\" is almost always there on the bottom left.)</li>\r\n</ol>\r\n\r\n<p>Delete the bloomer account</p>\r\n\r\n<ol>\r\n	<li>Choose \"People\" from the admin menu</li>\r\n	<li>Click bloomer</li>\r\n	<li>Selecgt the tab labelled \"edit\"</li>\r\n	<li>At the bottom click the button labelled \"Cancel account\"</li>\r\n	<li>Select the last radio button \"Delete the account and all its contents\"</li>\r\n	<li>Then the final \"Cancel account\" on the bottom and it\'s deleted.</li>\r\n</ol>\r\n\r\n<p>Add your accounts</p>\r\n\r\n<ol>\r\n	<li>Choose \"People\" from the admin menu.</li>\r\n	<li>Top of inner, white section click \"Add user\".</li>\r\n	<li>Fill in the form.</li>\r\n	<li>Consider who will require access &nbsp;to PII and check the box that gives them the HIPAAmaster role.</li>\r\n	<li>The simplest way to have the user logging in is to&nbsp;check the box \"Notify user of new account\" which will send a one-time URL to the email address you entered for the user above. &nbsp;Note: when they say one-time, they really mean it. &nbsp;If the user&nbsp;gets into a not quite created state you\'re done, just delete the account and start over.</li>\r\n</ol>\r\n\r\n<h1>Some Simple Niceties (also easy).</h1>\r\n\r\n<p>Site title and slogan</p>\r\n\r\n<ol>\r\n	<li>Click \"Configuration\" from the admin menu.</li>\r\n	<li>On the top right, click \"Site information\"</li>\r\n	<li>Fill in the top section \"SITE DETAILS\"</li>\r\n	<li>\"Save\" at the bottom</li>\r\n</ol>\r\n\r\n<p>Logo</p>\r\n\r\n<ol>\r\n	<li>\"Appearance\" from the admin menu.</li>\r\n	<li>Under \"Enabled Themes\" the first theme should have \"default theme\" appended to its name, click on \"Settings\".</li>\r\n	<li>In the \"LOGO IMAGES SETTINGS\" section uncheck \"Use the default logo\"</li>\r\n	<li>Prepare a logo image that\'s not more than while close to&nbsp;120px high and&nbsp;350px wide, and select&nbsp;it clicking \"choose file\" under \"Upload logo image\".</li>\r\n</ol>\r\n\r\n<h1>Create Content Types (sort of easy)</h1>\r\n\r\n<p>Content types are what you use to define your <a href=\"http://en.wikipedia.org/wiki/Data_model\">data model</a>&nbsp;in Bloom.</p>\r\n\r\n<p>Bloom includes&nbsp;a content type called HIPAA_PII that contains all the fields explicitely mentioned as Personally Identifying Information (PII). &nbsp;Bloom also&nbsp;extends Drupal\'s permissions system by providing hard-coded restrictions that prevent access of any kind to unless you have the HIPAAmaster&nbsp;role.</p>\r\n\r\n<p>You probably only gather a subset of the PII fields, and we\'re going to edit the HIPAA_PII content type, simplifying it by deleting the fields which we won\'t use.</p>\r\n\r\n<ol>\r\n	<li>Click \"Structure\" on the admin menu.</li>\r\n	<li>Select \"Content types\".</li>\r\n	<li>Down the list of content types you\'ll find the row for HIPAA_PII, on the right of the row click \"manage fields\".</li>\r\n	<li>On the right of each field\'s row is a \"delete\" link, click it for each field that you don\'t collect, and follow through with another confirming click.</li>\r\n	<li>Save.</li>\r\n</ol>\r\n\r\n<p>Now you\'ll want to create content types to store your data. &nbsp;There\'s a lot going on here, so insted of attemping to write instructions idiosyncratic to Bloom, I\'m just going to point to the <a href=\"https://www.drupal.org/documentation/modules/field-ui\">Drupal documentation on making and managing content types</a>. &nbsp;There are a few Bloom-specific points worth adding here.</p>\r\n\r\n<ul>\r\n	<li>Incorporate an \"<a href=\"https://www.drupal.org/node/1790558\">Entity Reference</a>\" field to incorporate related content types on data entry screens. &nbsp;Use the \"Inline Entity Form\" widget to display the related content type.</li>\r\n</ul>\r\n\r\n<h1>Import Your Data (not so easy)</h1>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n','','full_html'),('node','page',0,97,98,'und',0,'<h1>Overview</h1>\r\n\r\n<p>Bloom is designed to collect, manage, and export data gathered in the course of delivering medical services in a clinical environment. &nbsp;This document describes the steps needed to setup Bloom to manage your data. &nbsp;What follows is a sequence of steps you\'ll perform to get your data into Bloom, update/edit the data, and finally extract the data for analysis in statistical packages like Stata, R, SPSS..., and other reporting needs.</p>\r\n\r\n<h1>Before You Even Start...</h1>\r\n\r\n<p>While Bloom does its level best to be easy enough to use that anybody who can carefully follow instructions can build a site, you should seriously consider involving somebody who knows Drupal. &nbsp;<a href=\"http://www.drupal.org\">Drupal</a> is a public-domain, content management system, that is it\'s a platform for building web sites and applications, like Bloom and <a href=\"http://agov.com.au/\">aGov</a>. &nbsp;The world (and I mean literally&nbsp;everywhere on it) has a lot of Drupal people. &nbsp;Consultants are available for prices across the spectrum, and having somebody in the room who knows the tool will make things progress much more smoothly. &nbsp;Drupal provides a&nbsp;<a href=\"https://www.drupal.org/drupal-services\">directory of resources</a>&nbsp;in which you can find the right Drupal expert to assist you. &nbsp;The web is lousy with lists of Drupal contractors, here\'s another from <a href=\"https://www.elance.com/r/contractors/q-Drupal\">Elance</a>&nbsp;(You might even choose to hire me. ;-)</p>\r\n\r\n<p>Having said all that, hiring an expert isn\'t your only option. &nbsp;Drupal with it\'s millions of users has a rich set of documentation, and loads of other support resources. &nbsp;Many, many people, as I myself did,&nbsp;jump in with both feet and achieve their goals through experimentation with the tool, facilitated by documentation, forums, and online chatrooms. &nbsp;Below are a few of the main sources:</p>\r\n\r\n<ul>\r\n	<li><a href=\"https://www.drupal.org/documentation\">The Documentation at Drupal.org</a></li>\r\n	<li><a href=\"https://www.drupal.org/support\">Support at Drupal.org</a></li>\r\n	<li><a href=\"http://www.amazon.com/s/ref=nb_sb_ss_i_1_6?url=search-alias%3Dstripbooks&amp;field-keywords=drupal%207&amp;sprefix=Drupal%2Cstripbooks%2C134\">Books on Drupal 7 (our version) from Amazon</a></li>\r\n	<li><a href=\"http://it-ebooks-search.info/search?q=drupal+7&amp;type=google\">Free e-books on Drupal 7</a></li>\r\n</ul>\r\n\r\n<h1>Installing the Software (moderately difficult)</h1>\r\n\r\n<ol>\r\n	<li>Follow the&nbsp;<a href=\"https://www.drupal.org/documentation/install/beginners\">Drupal installation instructions</a>&nbsp;best suited to your environment; Bloom is platform independent.</li>\r\n	<li>Now you replace Drupal\'s delivered (default) web content with Bloom. &nbsp;(Bloom\'s entirety&nbsp;is composed of a directory tree of source files, and an export of a MySQL database.)\r\n	<ol>\r\n		<li>First delete the&nbsp;directory structure containing your&nbsp;Drupal web content tree. &nbsp;The way to identify that directory is by examining your web server configuration; it is&nbsp;the root of the content directory for your Drupal site.</li>\r\n		<li>Use&nbsp;<a href=\"http://git-scm.com/\">git</a>&nbsp;to \"clone\" Bloom from&nbsp;<a href=\"https://github.com/billybrant/bloom\">Bloom on github.com</a>&nbsp;into the directory you wiped out above.</li>\r\n	</ol>\r\n	</li>\r\n	<li>Use MySQL Workbench to import the Bloom database\r\n	<ol>\r\n		<li>Open MySQL Workbench</li>\r\n		<li>Select \"Data Import\" from the \"Server\" top-level menu</li>\r\n		<li>Change the radio button selection to \"Import from Self-Contained File\"</li>\r\n		<li>Click the button on the right labeled \"...\", and navigate to &lt;your Bloom root&gt;/dumps</li>\r\n		<li>Select the newest file with a name like Dumpyyyymmdd.sql</li>\r\n		<li>Click \"ok\", and then \"Start Import\" on the bottom right of the window</li>\r\n	</ol>\r\n	</li>\r\n	<li>Fire it all up, and visit http://<em>yourFQDN</em>/update.php and perform the proscribed steps.</li>\r\n	<li>From here, you\'ve got two options:\r\n	<ol>\r\n		<li>Have at it. &nbsp;Get some folks with Drupal skills, use the Bloom documentation (it\'s deficient, but&nbsp;growing), and build your site. &nbsp;Worthy of consideration, there\'s an army of Drupal consultants who can help here.</li>\r\n		<li>Contact me: William (Billy) Goedicke, billy@brant-interactive.com and we can see if I can help. &nbsp;I do have the leg up that I developed Bloom.</li>\r\n	</ol>\r\n	</li>\r\n</ol>\r\n\r\n<h1>Setup Your Usernames&nbsp;(this part\'s easy)</h1>\r\n\r\n<p>Bloom comes with two accounts \'admin\' and \'bloomer\'.&nbsp; Each account\'s password is Bloom_Rocks (case sensitive). &nbsp;The \'admin\' account has completely unrestricted access to everything. &nbsp;The \'bloomer\' account is intended for use by an administrative support person, and can add records, edit/update records, and generate export files (among other things). &nbsp;\'Bloomer\' can not access data that is protected by HIPAA. &nbsp;</p>\r\n\r\n<p>Change the password for admin</p>\r\n\r\n<ol>\r\n	<li>Cllick \"login\" at the bottom left of the screen to login to the \'admin\' account.</li>\r\n	<li>Choose \"<a href=\"https://www.drupal.org/node/627158\" target=\"_blank\">People</a>\" from the admin menu at the top of your screen (white letters on a black background).</li>\r\n	<li>Click on the \"admin\" username in the table at the bottom of the screen</li>\r\n	<li>Select the tab labelled \"edit\"</li>\r\n	<li>Change the password, and \"save\" at the bottom (\"save\" is almost always there on the bottom left.)</li>\r\n</ol>\r\n\r\n<p>Delete the bloomer account (this account is for demonstration purposes, only, and should be removed before placing a site in production)</p>\r\n\r\n<ol>\r\n	<li>Choose \"People\" from the admin menu</li>\r\n	<li>Click on the username \'bloomer\'</li>\r\n	<li>Select the tab labelled \"edit\"</li>\r\n	<li>At the bottom click the button labelled \"Cancel account\"</li>\r\n	<li>Select the last radio button \"Delete the account and all its contents\"</li>\r\n	<li>Then click the final \"Cancel account\" on the bottom and it\'s deleted.</li>\r\n</ol>\r\n\r\n<p>Add your accounts (while signed in as \"admin\')</p>\r\n\r\n<ol>\r\n	<li>Choose \"People\" from the admin menu.</li>\r\n	<li>At the top of the inner, white section click \"Add user\".</li>\r\n	<li>Fill in the form with the required information.</li>\r\n	<li>Consider who will require access to&nbsp;Personally Identifying Information (PII) and check the box that gives them the HIPAAmaster role.</li>\r\n	<li>Check the box \"Notify user of new account\". &nbsp;Upon saving the new account, this will send a one-time URL to the email address you entered for the user above. &nbsp;Note: when they say one-time, they really mean it. &nbsp;If the user&nbsp;gets into a not quite created state you\'re done, just delete the account and start over.</li>\r\n</ol>\r\n\r\n<p>While leaving the admin account in place is good practice (in case things get all messed up for the other accounts). &nbsp;You <strong><em>should not</em></strong> habitually login to the admin account;&nbsp;best practice is to set&nbsp;folks\' permissions appropriately&nbsp;on their personal accounts and use those to login.</p>\r\n\r\n<h1>Some Simple Niceties (also easy).</h1>\r\n\r\n<p>Add your site title and slogan (signed in as \'admin\')</p>\r\n\r\n<ol>\r\n	<li>Click \"Configuration\" from the admin menu.</li>\r\n	<li>On the top right, click \"Site information\"</li>\r\n	<li>Fill in the top section \"SITE DETAILS\"</li>\r\n	<li>\"Save\" at the bottom</li>\r\n</ol>\r\n\r\n<p>Add your logo to your Bloom site&nbsp;(signed in as \'admin\')</p>\r\n\r\n<ol>\r\n	<li>Click on&nbsp;\"Appearance\" from the admin menu.</li>\r\n	<li>Under \"Enabled Themes\" the first theme should have \"default theme\" appended to its name, click on \"Settings\".</li>\r\n	<li>Select the standard colors of your organization\'s marketing materials.</li>\r\n	<li>In the \"LOGO IMAGES SETTINGS\" section uncheck \"Use the default logo\"</li>\r\n	<li>Make sure you have&nbsp;a logo image available that\'s not more than 120px high and&nbsp;350px wide, and select&nbsp;it by&nbsp;clicking \"choose file\" under \"Upload logo image\".</li>\r\n</ol>\r\n\r\n<h1>Create Content Types (sort of easy)</h1>\r\n\r\n<p>Bloom includes&nbsp;a content type called HIPAA_PII that contains all the fields explicitely mentioned as Personally Identifying Information (PII). &nbsp;Bloom also&nbsp;extends Drupal\'s permissions system by providing hard-coded restrictions that prevent access of any kind unless you have the HIPAAmaster&nbsp;role.</p>\r\n\r\n<p>You probably only gather a subset of the PII fields as part of your intake/clinical processes, and we\'re going to edit the HIPAA_PII content type, simplifying it by deleting the fields which aren\'t being useed.</p>\r\n\r\n<ol>\r\n	<li>Make sure you\'re signed in as \"admin\'</li>\r\n	<li>Click \"Structure\" on the admin menu.</li>\r\n	<li>Select \"Content types\".</li>\r\n	<li>Down the list of content types you\'ll find the row for HIPAA_PII. &nbsp;Click \"manage fields\" (on the right of the row).</li>\r\n	<li>On the right of each field\'s row is a \"delete\" link, click it for each field that you&nbsp;<strong><em>don\'t</em></strong>&nbsp;collect, and follow through with another confirming click.</li>\r\n</ol>\r\n\r\n<p>Now you\'ll want to create content types to store your data. &nbsp;There\'s a lot going on here, so insted of attemping to write instructions idiosyncratic to Bloom, I\'m just going to point to the&nbsp;<a href=\"https://www.drupal.org/documentation/modules/field-ui\">Drupal documentation on making and managing content types</a>. &nbsp;There are a few Bloom-specific points worth adding here.</p>\r\n\r\n<ul>\r\n	<li>Incorporate an \"<a href=\"https://www.drupal.org/node/1790558\">Entity Reference</a>\" field to incorporate related content types on data entry screens. &nbsp;Use the \"Inline Entity Form\" widget to display the related content type.</li>\r\n</ul>\r\n\r\n<h1>Views, for You to Browse Your Data</h1>\r\n\r\n<p><a href=\"http://www.templatemonster.com/help/drupal-7-how-to-use-views-module-and-editconfigure-it.html\">Views 3 documentation and video</a>.</p>\r\n\r\n<h1>And, You\'re Done. &nbsp;Well, maybe not.</h1>\r\n\r\n<p>If you\'re going to be using Bloom for new data you haven\'t collected before then you are done, but it\'s common for&nbsp;folks to already have research data, and they want to use Bloom for its additional features, but they want the data they\'ve already collected to be imported into Bloom.</p>\r\n\r\n<h1>Import Your Existing Data (not so easy, often downright challenging)</h1>\r\n\r\n<p>The reason importing your data is hard is that it\'s usually messed up, or you wouldn\'t be seeking a new system. &nbsp;Getting data out of antiquated systems is often challenging, worst case you need to parse deprecated binary formats, more commonly you can find free/share ware utilities which is a much easier method. &nbsp;Another common problem is poor data modeling, and hard to analyze values in fields. &nbsp;We\'ve learned a lot over the last decade about data modeling that allows facile analysis, older data models can be both extremely awkward to analyze, and too imcomplete to model well. &nbsp;</p>\r\n\r\n<p>My current impression is that the largest set of desired&nbsp;clinical research statistics lend themselves well to <a href=\"http://en.wikipedia.org/wiki/Online_analytical_processing#Overview_of_OLAP_systems\">OLAP</a>&nbsp;tools, and I therefore recommend boning up not only on the more standard&nbsp;<a href=\"http://en.wikipedia.org/wiki/Relational_model\">normalized relational modeling</a>,&nbsp;but also on the <a href=\"http://en.wikipedia.org/wiki/Star_schema\">star</a> and <a href=\"http://en.wikipedia.org/wiki/Snowflake_schema\">snowflake</a> schemas that lend themselves to OLAP data exploration. &nbsp;Whether I\'m write or wong about the alignment of clinimcal research to you really should spend the day to digest the links in this paragraph; understanding of these structures and the distinctions between them will optimize your data modeling choices for Bloom, and those decisions (excluding simple field adds and alters) are a lot of work to structually change later. &nbsp;(Hunh, just as theyre hard to structually change now.)</p>\r\n\r\n<p>I\'m punting on the details, for now, to a <a href=\"http://www.isovera.com/blog/using-feeds-module-bulk-import-drupal-7\">pretty good write-up on what you click&nbsp;by somebody else</a>. &nbsp;</p>\r\n\r\n<p>The steps I take are:</p>\r\n\r\n<ol>\r\n	<li>Scrub your data as best you can in your legacy system. &nbsp;\r\n	<ol>\r\n		<li>This is typically a labor intensive, and therefore error prone process. &nbsp;Have multiple teams independently delete bad data, and edit erroroneous field values.</li>\r\n		<li>Extract the mismatches and discuss the causes. &nbsp;</li>\r\n		<li>This becomes an iterative process of ever improving understanding of what your data means. &nbsp;Repeat until done.</li>\r\n	</ol>\r\n	</li>\r\n	<li>Generate a CSV file of your data that matches the fields in your content type. &nbsp;This actually goes both ways, if you\'re porting a body of existing data you\'ll often want to design your content type to have fields that match your exported data.&nbsp;</li>\r\n	<li>Create a header with field names in your CSV, then as necessary edit those names so all the letters are lower case, replace spaces with underscores, and save as UTF-8.</li>\r\n	<li>Now that you\'ve got a content type and CSV export file of your existing data that match, you click \"Structure\" on the main menu, and select \"Feed Importer\" -&gt; \"+ Add Importer\"</li>\r\n	<li>Give it a \"Name\" and an optional \"Description\" and click \"Create\"</li>\r\n	<li>The links on the left of the main content each need to be reviewed and set, but they\'re pretty straight forward. &nbsp;Below are some tips:\r\n	<ol>\r\n		<li>\"Basic Settings\": \"Access to Content Type\" -&gt; \"Use Standalone Form\", \"Periodic Import\" -&gt; \"Off\", \"SAVE\"</li>\r\n		<li><span style=\"line-height:1.6\">\"Fetcher\" select \"File Upload\", \"SAVE\"</span></li>\r\n		<li><span style=\"line-height:1.6\">\"Parser\" \"CSV Parser\", \"SAVE\"</span></li>\r\n		<li><span style=\"line-height:1.6\">\"Processor\" \"Node Processor\", \"SAVE\"</span></li>\r\n		<li><span style=\"line-height:1.6\">\"Node Processor - Settings\" -&gt; \"Bundle\" select the content type you want to import, \"SAVE\"</span></li>\r\n		<li><span style=\"line-height:1.6\">\"Node Processor - Mappings\": &nbsp;The source is the name for the field from your CSV\'s header line, and you\'ll be able to pick the target field for your content type from the pick list.</span></li>\r\n		<li><span style=\"line-height:1.6\">Append /import to your site\'s root URL, pick the importer you just made, and hit \"Import\"</span></li>\r\n	</ol>\r\n	</li>\r\n	<li>Oh yeah, you\'ve got to scrub again, and it\'s tedious again (see step 1 relative to this 7 again)</li>\r\n</ol>\r\n\r\n<h1>&nbsp;</h1>\r\n','','full_html'),('node','page',0,98,99,'und',0,'<h1>Bloom\'s Features</h1>\r\n\r\n<p>Bloom is built on Drupal which is a Content Management System. &nbsp;</p>\r\n\r\n<ul>\r\n	<li>Robust and finely grained permission mangement.</li>\r\n	<li>Collaboration structures</li>\r\n	<li>Rich API\r\n	<ul>\r\n		<li>&nbsp;</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n','','full_html'),('node','page',0,161,162,'und',0,'<p>Lots of things get created to make a Bloom site completely idiosyncratic to a particular researcher\'s needs. &nbsp;The left menu has some samples.</p>\r\n','','full_html'),('node','page',0,164,165,'und',0,'<p>You can insert descriptive language into your form through the use of field groups. &nbsp;</p>\r\n\r\n<ol>\r\n	<li>Main menu <u>Strurcture</u></li>\r\n	<li>Choose&nbsp;<u>Content Type</u></li>\r\n	<li>Select the <u>Manage Fields</u> tab</li>\r\n	<li>At the very bottom fill in the row for <u>Add a New Grou</u>p, leave the <u>WIDGET</u> set to <u>Fieldset</u></li>\r\n	<li>Save</li>\r\n	<li>Return to your new fieldset, and click the <u>gear-labeled-button</u></li>\r\n	<li>Enter the html you want to appear on the form in the Description text box. &nbsp;Unfortunately there\'s no WYSIWYG editor function here, so you have to insert the HTML source. [Aside: add explanation of how]</li>\r\n	<li><u>Save</u></li>\r\n	<li>And, you\'re done</li>\r\n</ol>\r\n','','full_html');
/*!40000 ALTER TABLE `field_revision_body` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-09-11 13:45:54
